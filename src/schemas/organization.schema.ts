import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema({ timestamps: true })
export class Organization {
  @Prop({ required: true }) name!: string;
  @Prop({ required: true, unique: true }) uuid!: string;
  @Prop() permalink!: string;
  @Prop() description!: string;
  @Prop() website_url!: string;
  @Prop() funding_total?: string;
  @Prop() equity_funding_total?: string;
  @Prop() revenue_range?: string;
  @Prop() ipo_status?: string;
  @Prop() valuation?: string;
  @Prop() valuation_date?: string;
  @Prop() status?: string;
  @Prop() location_identifiers?: string[];
  @Prop() categories?: string[];
  @Prop() investor_identifiers?: string[];
  @Prop() funding_stage?: string;
  @Prop() num_employees_enum?: string;
  @Prop() operating_status?: string;
  @Prop() image_url?: string;
  @Prop() founded_on?: string;
  @Prop() num_funding_rounds?: number;
  @Prop() num_investors?: number;
  @Prop() num_exits?: number;
  @Prop() updated_at?: string;
  @Prop() acquirer_identifier?: string;
  @Prop() aliases?: string[];
  @Prop() category_groups?: string[];
  @Prop() closed_on?: string;
  @Prop() company_type?: string;
  @Prop() contact_email?: string;
  @Prop() created_at?: string;
  @Prop() delisted_on?: string;
  @Prop() demo_days?: boolean;
  @Prop() diversity_spotlights?: string[];
  @Prop() entity_def_id?: string;
  @Prop() exited_on?: string;
  @Prop() facebook?: string;
  @Prop() founder_identifiers?: string[];
  @Prop() funds_total?: string;
  @Prop() hub_tags?: string[];
  @Prop() image_id?: string;
  @Prop() investor_stage?: string[];
  @Prop() investor_type?: string[];
  @Prop() last_equity_funding_total?: string;
  @Prop() last_equity_funding_type?: string;
  @Prop() last_funding_at?: string;
  @Prop() last_funding_total?: string;
  @Prop() last_funding_type?: string;
  @Prop() last_key_employee_change_date?: string;
  @Prop() last_layoff_date?: string;
  @Prop() legal_name?: string;
  @Prop() linkedin?: string;
  @Prop() listed_stock_symbol?: string;
  @Prop() location_group_identifiers?: string[];
  @Prop() num_acquisitions?: number;
  @Prop() num_alumni?: number;
  @Prop() num_articles?: number;
  @Prop() num_current_advisor_positions?: number;
  @Prop() num_current_positions?: number;
  @Prop() num_diversity_spotlight_investments?: number;
  @Prop() num_enrollments?: string;
  @Prop() num_event_appearances?: number;
  @Prop() num_exits_ipo?: number;
  @Prop() num_founder_alumni?: number;
  @Prop() num_founders?: number;
  @Prop() num_funds?: number;
  @Prop() num_lead_investments?: number;
  @Prop() num_lead_investors?: number;
  @Prop() num_past_positions?: number;
  @Prop() num_portfolio_organizations?: number;
  @Prop() num_sub_organizations?: number;
  @Prop() owner_identifier?: string;
  @Prop() permalink_aliases?: string[];
  @Prop() phone_number?: string;
  @Prop() rank_org?: number;
  @Prop() short_description?: string;
  @Prop() stock_exchange_symbol?: string;
  @Prop() stock_symbol?: string;
  @Prop() twitter?: string;
  @Prop() went_public_on?: string;
}

export type OrganizationDocument = Organization & Document;
export const OrganizationSchema = SchemaFactory.createForClass(Organization);
